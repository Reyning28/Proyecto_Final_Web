@page "/mapa-multas"
@using Digesett.Services
@using Digesett.Models
@inject IAgentService AgentService
@inject SessionService SessionService
@inject IJSRuntime JSRuntime
@inject NavigationManager NavigationManager
@rendermode InteractiveServer

@if (!SessionService.IsAuthenticated)
{
    <div class="alert alert-warning text-center">
        <i class="fas fa-exclamation-triangle"></i>
        Debe iniciar sesi√≥n para acceder a esta p√°gina.
    </div>
    return;
}

<div class="mapa-container">
    <h2>Mapa de Multas üó∫Ô∏è</h2>
    <div id="map" class="map"></div>
</div>

<style>
    .mapa-container {
        padding: 20px;
        max-width: 1200px;
        margin: 0 auto;
    }

    .map {
        height: 600px;
        width: 100%;
        border-radius: 8px;
        box-shadow: 0 2px 4px rgba(0,0,0,0.1);
    }

    h2 {
        margin-bottom: 20px;
        color: #333;
    }

    .alert {
        padding: 2rem;
        border-radius: 8px;
        font-size: 1.1rem;
    }

    .alert i {
        margin-right: 10px;
        font-size: 1.2rem;
    }
</style>

@code {
    // Lista que almacena todas las multas registradas por el agente
    private List<Fine> multas;

    protected override void OnInitialized()
    {
        if (!SessionService.IsAuthenticated)
        {
            NavigationManager.NavigateTo("/login", true);
        }
    }

    // M√©todo que se ejecuta despu√©s de renderizar el componente
    protected override async Task OnAfterRenderAsync(bool firstRender)
    {
        // Verificar si es la primera vez que se renderiza el componente
        if (firstRender)
        {
            // Cargar los datos del mapa de multas
            await LoadMapData();
        }
    }

    // M√©todo para cargar los datos de las multas y enviarlos al mapa
    private async Task LoadMapData()
    {
        try
        {
            // Obtener el ID del agente de la sesi√≥n
            string agentId = SessionService.CurrentAgentId;

            // Obtener la lista de multas asociadas al agente
            multas = await AgentService.GetAgentFinesAsync(agentId);
            
            // Invocar la funci√≥n JavaScript para inicializar el mapa con las multas obtenidas
            await JSRuntime.InvokeVoidAsync("initializeMap", multas);
        }
        catch (Exception ex)
        {
            // Manejar cualquier excepci√≥n que ocurra durante la carga de los datos
            Console.WriteLine(ex);
        }
    }
}