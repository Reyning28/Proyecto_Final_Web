@page "/"
@page "/login"
@using Digesett.Services
@inject IAgentService AgentService
@inject NavigationManager NavigationManager
@rendermode InteractiveServer

<div class="login-container">
    <div class="login-box">
        <h3>DIGESETT - Acceso de Agentes</h3>

        <!-- Campo para ingresar la cédula (nombre de usuario) -->
        <div>
            <label for="cedula">Cédula:</label>
            <input id="cedula" type="text" @bind="cedula" class="form-control" />
        </div>

        <!-- Campo para ingresar la contraseña -->
        <div>
            <label for="password">Contraseña:</label>
            <input id="password" type="password" @bind="password" class="form-control" />
        </div>

        <!-- Mostrar el mensaje de error si existe alguno -->
        @if (!string.IsNullOrWhiteSpace(errorMessage))
        {
            <div class="alert alert-danger">
                @errorMessage
            </div>
        }

        <!-- Indicador de carga personalizado (si está cargando) -->
        @if (isLoading)
        {
            <div class="loading-container">
                <img src="/Images/loading.gif" alt="Cargando..." class="loading-spinner" />
            </div>
        }

        <!-- Botón para iniciar sesión -->
        <button class="btn btn-primary" @onclick="HandleLogin" disabled="@isLoading">
            Iniciar Sesión
        </button>
    </div>
</div>

@code {
    private string cedula = string.Empty;
    private string password = string.Empty;
    private string errorMessage = string.Empty;
    private bool isLoading = false; // Variable para gestionar el estado de carga

    private async Task HandleLogin()
    {
        errorMessage = string.Empty; // Reseteamos el mensaje de error antes de hacer la validación

        // Validación básica para asegurarnos de que ambos campos (cedula y contraseña) no estén vacíos
        if (string.IsNullOrWhiteSpace(cedula) || string.IsNullOrWhiteSpace(password))
        {
            SetErrorMessage("Por favor, complete todos los campos.");
            return; // Si los campos están vacíos, terminamos la ejecución aquí
        }

        isLoading = true; // Activamos el indicador de carga

        try
        {
            // Intentamos autenticar al agente usando el servicio de login
            var agent = await AgentService.LoginAsync(cedula, password);

            // Si la autenticación es exitosa, redirigimos a la página de registro de multas
            if (agent != null)
            {
                NavigationManager.NavigateTo("/registro-multa");
            }
            else
            {
                // Si las credenciales son inválidas, mostramos un mensaje de error
                SetErrorMessage("Credenciales inválidas.");
            }
        }
        catch
        {
            // Si ocurre un error en el proceso de autenticación (por ejemplo, problemas de conexión), mostramos un mensaje general
            SetErrorMessage("Error al iniciar sesión. Inténtelo más tarde.");
        }
        finally
        {
            isLoading = false; // Desactivamos el indicador de carga una vez terminado el proceso
        }
    }

    private void SetErrorMessage(string message)
    {
        errorMessage = message;
    }
}
